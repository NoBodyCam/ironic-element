HeatTemplateFormatVersion: '2012-12-12'
Description: 'Ironic initial template'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: String
    Default: default
  InstanceType:
    Description: Use this flavor.
    Type: String
    Default: baremetal
  IronicImageId:
    Description: Ironic image id.
    Type: String
    Default: ironic
  NovaDb:
    Description: Database connection.
    Type: String
    Default: mysql://ironic:ironic@127.0.0.1/ironic
  PostfixMailHostname:
    Description: Hostname for postfix..
    Type: String
    Default: ironic-ironic
  PostfixMailDomain:
    Description: Top level domain for postfix.
    Type: String
    Default: novalocal
  PostfixDelayWarningTime:
    Description: Amount of time to Delay warnnings.
    Type: String
    Default: 4h
  KeystoneHost:
    Description: Keystone host ip.
    Type: String
    Default: 192.0.2.1
  RabbitHost:
    Description: Rabbit host ip.
    Type: String
    Default: 192.0.2.1
  GlanceHost:
    Description: Glance host ip.
    Type: String
    Default: 192.0.2.1
  SnmpMIB:
    Description: MIB to export.
    Type: String
    Default: UCD-SNMP-MIB
  SnmpROUserName:
    Description: Read only user name for snmp v3.
    Type: String
    Default: ROUser
  SnmpROUserPass:
    Description: Read only user password for snmp v3.
    Type: String
    Default: password
Resources:
  ironic:
    Metadata:
      OpenStack::ImageBuilder::Elements: [ ironic ]
      rabbit:
        host:
          Ref: RabbitHost
      nova:
        db:
          Ref: NovaDb
      mysql:
        create-users:
          - username: ironic
            database: ironic
            password: ironic
      postfix:
        mailhostname:
          Ref: PostfixMailHostname
        maildomain:
          Ref: PostfixMailDomain
        delay_warning_time:
          Ref: PostfixDelayWarningTime
      keystone:
        host:
          Ref: KeystoneHost
      glance:
        host:
          Ref: GlanceHost
      snmp:
        MIB:
          Ref: SnmpMIB
        readonly_user_password:
          Ref: SnmpROUserPass
        readonly_user_name:
          Ref: SnmpROUserName
    Type: AWS::EC2::Instance
    Properties:
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: IronicImageId
      InstanceType: {Ref: InstanceType}
Outputs:
    IronicHost:
        Fn::GetAtt: [ ironic , PrivateIp ]
